[tool.black]
#line-length = 88
line-length = 73
exclude = '\/generated_ui\/'

[tool.coverage.run]
branch = true
command_line = "-m pytest"
omit = [
  # Usually requires full-fletched set up to use.
  "*/__main__.py",
]
source = [
  "src",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@typing.overload",
]
fail_under = 100
show_missing = true
skip_covered = true

[tool.mypy]
mypy_path = "src:stubs:tests"
show_error_codes = true
strict = true

[[tool.mypy.overrides]]
module = "*.generated_ui.*"
ignore_errors = true

[tool.pylint.BASIC]
# Violation of naming convention that should be accepted.
good-names = [
  # Used by convention.
  "_T_co",  # TypeVar name.
  # PySide6 module.
  "PySide6",
  "ui",  # Designer object name convention.
]
ignore = [
  # Cannot control generated outputs.
  "generated_ui",
]

[tool.pylint.FORMAT]
max-line-length = 73

[tool.pylint."MESSAGES CONTROL"]
disable = [
  # Not every TODO is urgent. Especially with no issue tracker.
  "fixme",

  # Global statements are already explicit.
  # Not using per-case disables
  # which will end up being used in every case.
  # By doing a disable here, finding them when necessary will be easier.
  "global-statement",

  # It does not always make sense to document.
  "missing-class-docstring",
  "missing-function-docstring",
  "missing-module-docstring",

  # Allow intentionally disabled checks.
  "locally-disabled",
  "suppressed-message",

  # Not checking based on numbers.
  "too-few-public-methods",
  "too-many-ancestors",
  "too-many-instance-attributes",
  "too-many-lines",
  "too-many-public-methods",

  # Temporary control to before moving to 88 columns.
  "line-too-long",
]
enable = [
  # Disabled by default.
  "bad-inline-option",
  "deprecated-pragma",
  "file-ignored",
  "raw-checker-failed",
  "use-symbolic-message-instead",

  # Ensure future warnings are not hidden.
  "useless-suppression",
]
extension-pkg-whitelist = [
  # Derive type hints from C extensions.
  "PySide6",
  "pydantic",
]
